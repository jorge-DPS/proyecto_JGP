#!/bin/sh

set -o errexit
set -o nounset


# N.B. If only .env files supported variable expansion...

if [ -z "${POSTGRES_USER}" ]; then
    base_postgres_image_default_user='mariadb'
    export POSTGRES_USER="${base_postgres_image_default_user}"
fi
#export DATABASE_URL="mysql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@${POSTGRES_HOST}:${POSTGRES_PORT}/${POSTGRES_DB}"
#export DATABASE_URL="mysql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@${POSTGRES_HOST}:${POSTGRES_PORT}/${POSTGRES_DB}"
export DATABASE_URL="db=MySQLdb.connect(passwd=${POSTGRES_PASSWORD},db=${POSTGRES_DB},host=${POSTGRES_HOST},port=${POSTGRES_PORT},user=${POSTGRES_USER})"

postgres_ready() {
python << END
import sys
import mysql.connector
try:
    db=MySQLdb.connect(passwd='12345678x',db='jgp_db',host='127.0.0.1',port=3306,user='jgp_user') 
    """
    mydb = mysql.connector.connect(
    host="127.0.0.1",
    user="jgp_user",
    passwd="12345678x",
    database="jgp_db"
    port="3306"
    ) 
    """
except mysql.OperationalError:
    sys.exit(-1)
sys.exit(0)

"""
import psycopg2

try:
    psycopg2.connect(
        dbname="${POSTGRES_DB}",
        user="${POSTGRES_USER}",
        password="${POSTGRES_PASSWORD}",
        host="${POSTGRES_HOST}",
        port="${POSTGRES_PORT}",
    )
except psycopg2.OperationalError:
    sys.exit(-1)
sys.exit(0)
"""
END
}
until postgres_ready; do
  >&2 echo 'Waiting for MYSQL to become available...'
  sleep 1
done
>&2 echo 'MYSQL is available'

exec "$@"
